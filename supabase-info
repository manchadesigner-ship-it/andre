URL = https://cnmdhsjmmbibkywuvatm.supabase.co
ANON KEY = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNubWRoc2ptbWJpYmt5d3V2YXRtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU5MTA0MjUsImV4cCI6MjA3MTQ4NjQyNX0.pVZJrf5Hv24yUHEfroURqugIhSNbh21GfczW00Y2SFk
service_role secret = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNubWRoc2ptbWJpYmt5d3V2YXRtIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NTkxMDQyNSwiZXhwIjoyMDcxNDg2NDI1fQ.ER4FTSZD0YR6fV9OWUSr9iRi9DWCW6odQewFncvcaIc

tabelas:

create table public.usuarios (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default now(),
    "user_ID" uuid null,
    "Nome" text null,
    e - mail text null,
    constraint usuarios_pkey primary key (id),
    constraint usuarios_user_ID_fkey foreign KEY ("user_ID") references auth.users (id)
  ) TABLESPACE pg_default;

create table public.clientes (
  id bigint generated by default as identity not null,
  nome text not null,
  cpf_cnpj text not null,
  telefone text null,
  email text null,
  endereco text null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  user_ref uuid null,
  constraint clientes_pkey primary key (id),
  constraint clientes_cpf_cnpj_key unique (cpf_cnpj),
  constraint clientes_user_ref_fkey foreign KEY (user_ref) references auth.users (id)
) TABLESPACE pg_default;

create table public.imoveis (
  id bigint generated by default as identity not null,
  tipo text not null,
  endereco text not null,
  valor_aluguel numeric(12, 2) not null,
  condominio numeric(12, 2) null,
  iptu numeric(12, 2) null,
  status public.imovel_status not null default 'disponivel'::imovel_status,
  fotos_divulgacao text[] null default '{}'::text[],
  fotos_manutencao text[] null default '{}'::text[],
  plantas text[] null default '{}'::text[],
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  user_ref uuid null,
  constraint imoveis_pkey primary key (id),
  constraint imoveis_user_ref_fkey foreign KEY (user_ref) references auth.users (id)
) TABLESPACE pg_default;

create table public.despesas (
  id bigint generated by default as identity not null,
  imovel_id bigint null,
  tipo_despesa public.despesa_tipo not null,
  descricao text null,
  valor numeric(12, 2) not null,
  data timestamp with time zone not null default now(),
  comprovante_url text null,
  created_at timestamp with time zone null default now(),
  user_ref uuid null,
  constraint despesas_pkey primary key (id),
  constraint despesas_imovel_id_fkey foreign KEY (imovel_id) references imoveis (id) on delete CASCADE,
  constraint despesas_user_ref_fkey foreign KEY (user_ref) references auth.users (id)
) TABLESPACE pg_default;

create index IF not exists idx_despesas_imovel_id on public.despesas using btree (imovel_id) TABLESPACE pg_default;

create table public.contratos (
  id bigint generated by default as identity not null,
  imovel_id bigint null,
  cliente_id bigint null,
  valor_aluguel numeric(12, 2) not null,
  vencimento_dia integer not null,
  inicio timestamp with time zone not null,
  fim timestamp with time zone not null,
  tipo public.contrato_tipo not null,
  multa numeric(12, 2) null default 0,
  juros numeric(12, 2) null default 0,
  desconto numeric(12, 2) null default 0,
  reajuste public.contrato_reajuste not null,
  status public.contrato_status not null default 'ativo'::contrato_status,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  user_ref uuid null,
  constraint contratos_pkey primary key (id),
  constraint contratos_cliente_id_fkey foreign KEY (cliente_id) references clientes (id) on delete CASCADE,
  constraint contratos_imovel_id_fkey foreign KEY (imovel_id) references imoveis (id) on delete CASCADE,
  constraint contratos_user_ref_fkey foreign KEY (user_ref) references auth.users (id),
  constraint contratos_vencimento_dia_check check (
    (
      (vencimento_dia >= 1)
      and (vencimento_dia <= 31)
    )
  ),
  constraint contratos_imovel_id_excl EXCLUDE using btree (
    imovel_id
    with
      =
  )
  where
    ((status = 'ativo'::contrato_status))
) TABLESPACE pg_default;
